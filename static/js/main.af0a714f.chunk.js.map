{"version":3,"sources":["reducers/index.js","actions/index.js","components/btc.js","components/eth.js","containers/refresh-button.js","containers/transfer-button.js","containers/recommend.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","send_addr","interval","btc_price","eth_price","price_hist","snapshots","peak_price","m1_price","m2_price","m3_price","m4_price","m5_price","m6_price","mainReducer","state","arguments","length","undefined","action","type","Object","objectSpread","fetchBTCPrice","dispatch","axios","get","then","res","updateBTCPrice","data","amount","console","log","fetchETHPrice","updateETHPrice","fetchPriceHist","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","tempData","Data","map","item","date","moment","unix","time","format","close","updatePriceHist","tempPrice","tempDate","i","updatePriceSnapshots","abrupt","sent","stop","this","_x","apply","history","updatePeakPrice","peakPrice","BTCPrice","props","react_default","createElement","ETHPrice","RefreshButton","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","refreshPrice","bind","assertThisInitialized","inherits","createClass","key","value","className","onClick","Component","connect","actionCreators","TransferButton","web3","from_addr","handleClick","_componentDidMount","_ref2","Web3","window","currentProvider","setState","eth","getAccounts","slicedToArray","t0","_handleClick","_callee2","_context2","sendTransaction","from","to","utils","toWei","Recommend","hist_data","snapshotAvg","avgPcnt","m1","m2","m3","m4","m5","m6","calcRecommend","_calcRecommend","toFixed","width","align","href","App","timer","tick","setInterval","clearInterval","data-test","btc","refresh_button","transfer_button","recommend","Boolean","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af0a714f.chunk.js","sourcesContent":["\r\nlet defaultState = {\r\n    send_addr: '0xcfA3c2407a547fC5cd248BBF43b829096a60Fcc0',\r\n    interval: 60,\r\n    btc_price: 0,\r\n\teth_price: 0,\r\n\tprice_hist : [],\r\n\tsnapshots: {\r\n\t\tpeak_price: 0,\r\n\t\tm1_price: 0,\r\n\t\tm2_price: 0,\r\n\t\tm3_price: 0,\r\n\t\tm4_price: 0,\r\n\t\tm5_price: 0,\r\n\t\tm6_price: 0\r\n\t}\r\n}\r\n\r\nconst mainReducer = (state = defaultState, action) => {\r\n\r\n\tif(action.type === 'UPDATE_BTC_PRICE') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tbtc_price: action.btc_price\r\n\t\t} \r\n\t} else if(action.type === 'UPDATE_ETH_PRICE') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\teth_price: action.eth_price\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_PRICE_HIST') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tprice_hist: action.price_hist\r\n\t\t}\r\n\t} else if(action.type === 'UPDATE_PRICE_SNAPSHOTS') {\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tsnapshots: action.snapshots\r\n\t\t}\r\n\t} else {\r\n\t\treturn{\r\n\t\t\t...state\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default mainReducer\r\n\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\n\r\nexport function fetchBTCPrice(){\r\n\treturn(dispatch) => {\r\n\t\treturn axios.get('https://api.coinbase.com/v2/prices/BTC-USD/spot').then((res) => {\r\n\t\t\tdispatch(updateBTCPrice(res.data.data.amount));\r\n\t\t\tconsole.log(\"btc refreshed\")\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport function fetchETHPrice(){\r\n\treturn(dispatch) => {\r\n\t\treturn axios.get('https://api.coinbase.com/v2/prices/ETH-USD/spot').then((res) => {\r\n\t\t\tdispatch(updateETHPrice(res.data.data.amount));\r\n\t\t\t// console.log(\"eth refreshed\")\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport function fetchPriceHist(){\r\n\treturn async (dispatch) => {\r\n\t\treturn await axios.get('https://min-api.cryptocompare.com/data/histoday?fsym=BTC&tsym=USD&limit=365&aggregate=1&e=CCCAGG&UTCHourDiff=-4').then((res) => {\r\n\t\tlet tempData = res.data.Data.map( (item) => {\r\n\t\t\t\tconst date = moment.unix(item.time).format('YYYY-MM-DD')\r\n\t\t\t\treturn { date: date, close: item.close } \r\n\t\t\t\t// return { [date]: item.close } \r\n\t\t\t\t// return tempData[date] = item.close\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tdispatch(updatePriceHist(tempData));\r\n\r\n\t\t\tlet tempPrice = 0\r\n\t\t\tlet tempDate = null\r\n\t\t\tfor (let i = tempData.length-1; i >= 0; i--) {\r\n\t\t\t\tif (tempPrice < tempData[i].close) {\r\n\t\t\t\t\ttempDate = tempData[i].date\r\n\t\t\t\t\ttempPrice = tempData[i].close\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet snapshots = {\r\n\t\t\t\tpeak_price: { date: tempDate, close: tempPrice },\r\n\t\t\t\tm1_price: tempData[tempData.length-30],\r\n\t\t\t\tm2_price: tempData[tempData.length-60],\r\n\t\t\t\tm3_price: tempData[tempData.length-90],\r\n\t\t\t\tm4_price: tempData[tempData.length-120],\r\n\t\t\t\tm5_price: tempData[tempData.length-150],\r\n\t\t\t\tm6_price: tempData[tempData.length-180]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdispatch(updatePriceSnapshots(snapshots))\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport function updateBTCPrice(amount){\r\n    return{\r\n        type:\"UPDATE_BTC_PRICE\",\r\n        btc_price:amount\r\n    }\r\n}\r\n\r\nexport function updateETHPrice(amount){\r\n    return{\r\n        type:\"UPDATE_ETH_PRICE\",\r\n        eth_price:amount\r\n    }\r\n}\r\n\r\nexport function updatePriceHist(history){\r\n    return{\r\n        type:\"UPDATE_PRICE_HIST\",\r\n        price_hist: history\r\n    }\r\n}\r\n\r\nexport function updatePeakPrice(peakPrice){\r\n    return{\r\n        type:\"UPDATE_PEAK_PRICE\",\r\n        peak_price: peakPrice\r\n    }\r\n}\r\n\r\nexport function updatePriceSnapshots(snapshots){\r\n    return{\r\n        type:\"UPDATE_PRICE_SNAPSHOTS\",\r\n\t\t\tsnapshots: {\r\n\t\t\t\tpeak_price: snapshots.peak_price,\r\n\t\t\t\tm1_price: snapshots.m1_price,\r\n\t\t\t\tm2_price: snapshots.m2_price,\r\n\t\t\t\tm3_price: snapshots.m3_price,\r\n\t\t\t\tm4_price: snapshots.m4_price,\r\n\t\t\t\tm5_price: snapshots.m5_price,\r\n\t\t\t\tm6_price: snapshots.m6_price\r\n\t\t\t}\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst BTCPrice = (props) => {\r\n\treturn <div><p>1 BTC = ${props.btc_price} USD </p></div>;\r\n}\r\n\r\nexport default BTCPrice;\r\n\r\n","import React from 'react';\r\n\r\nconst ETHPrice = (props) => {\r\n\treturn <div><p>1 ETH = ${props.eth_price} USD </p></div>;\r\n}\r\n\r\nexport default ETHPrice;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../actions/index';\r\n\r\nexport class RefreshButton extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.refreshPrice = this.refreshPrice.bind(this)\r\n\t}\r\n\t\r\n\trefreshPrice() {\r\n    \tthis.props.fetchBTCPrice();\r\n    \tthis.props.fetchETHPrice();\r\n  \t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<div><button className=\"button\" type=\"button\" onClick={this.refreshPrice}>Refresh Price</button></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(RefreshButton)\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Web3 from 'web3';\r\n\r\nexport class TransferButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        web3: null,\r\n        from_addr: null\r\n      }\r\n\tthis.handleClick = this.handleClick.bind(this)\r\n  \t}\r\n\r\n  \tasync componentDidMount() {\r\n\t\ttry {\r\n\r\n\t\t\tif (this.state.web3 === null ) {\r\n\t\t\t\tlet web3 = new Web3(window.web3.currentProvider);\r\n\t\t\t\tthis.setState({ web3 })\r\n\r\n\t\t\t\tlet [ from_addr, _ ] = await web3.eth.getAccounts()\r\n\t\t\t\tthis.setState({ from_addr })\r\n\t\t\t}\r\n\t\t\tconsole.log(\"this.state:\", this.state);\r\n\r\n\t\t} catch (err) {\r\n      \t\tconsole.log(\"Error finding web3.\", err);\r\n    \t}\r\n  \t}\r\n\r\n\tasync handleClick() { \r\n\t\ttry {\r\n\t\t\tconsole.log(\"this.state.web3:\", this.state.web3);\r\n\t\t\tlet amount = \"\"+(1 / this.props.eth_price * 5)\r\n \t\t\tawait this.state.web3.eth.sendTransaction({\r\n\t            from: this.state.from_addr,\r\n\t            to: this.props.send_addr,\r\n\t            value: this.state.web3.utils.toWei(amount , 'ether')\r\n        \t})   \r\n        } catch (err) {\r\n      \t\tconsole.log(err);\r\n    \t}   \r\n  \t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"button\" onClick={this.handleClick} >Transfer $5 <br />({  1 / this.props.eth_price * 5  } Ether)</button> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconst { btc_price, eth_price, send_addr } = state\r\n  \treturn { btc_price, eth_price, send_addr }\r\n}\r\n\r\nexport default connect (mapStateToProps)(TransferButton)\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Stringify from 'react-stringify';\r\nimport * as actionCreators from '../actions/index';\r\n\r\nexport class Recommend extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hist_data: [],\r\n            snapshotAvg: 0,\r\n            avgPcnt: 0,\r\n            peakPrice: 0,\r\n            m1: 0,\r\n            m2: 0,\r\n            m3: 0,\r\n            m4: 0,\r\n            m5: 0,\r\n            m6: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calcRecommend()\r\n    }\r\n    \r\n    async calcRecommend() {\r\n        await this.props.fetchPriceHist()\r\n\r\n        this.setState({ peakPrice: this.props.snapshots.peak_price })\r\n        this.setState({ m1: this.props.snapshots.m1_price })\r\n        this.setState({ m2: this.props.snapshots.m2_price })\r\n        this.setState({ m3: this.props.snapshots.m3_price })\r\n        this.setState({ m4: this.props.snapshots.m4_price })\r\n        this.setState({ m5: this.props.snapshots.m5_price })\r\n        this.setState({ m6: this.props.snapshots.m6_price })\r\n\r\n        const snapshotAvg = ((this.state.m1.close + this.state.m2.close + this.state.m3.close + this.state.m4.close + this.state.m5.close + this.state.m6.close) / 6).toFixed(2)\r\n        const avgPcnt = (snapshotAvg / this.state.peakPrice.close * 100).toFixed(0)\r\n\r\n        this.setState({ snapshotAvg: snapshotAvg  })\r\n        this.setState({ avgPcnt: avgPcnt  })\r\n    }\r\n    \r\n    \r\n    render() {\r\n\t\treturn (\r\n            <div>\r\n                <p>\r\n                    The 6 month average Bitcoin price is { this.state.avgPcnt }% of the peak price ${this.state.peakPrice.close} on {this.state.peakPrice.date}.\r\n                    <br /><br />\r\n                    <b>Recommendation:</b>\r\n                    <br /><br />\r\n                    { \r\n                        this.state.avgPcnt < 60 \r\n                        ? \"BUY! The 6 month average price percentage from peak is still BELOW 60% which is a positive signal.\" \r\n                        : \"DON'T BUY! The 6 month price percentage from peak is ABOVE 60% which is a negative signal.\" \r\n                    }\r\n                </p>\r\n                <br />\r\n                <p>Below are the price snapshots for the last 6 months (rolling)</p>\r\n                <table width=\"500px\" align=\"center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Price</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.m1.date}</td>\r\n                            <td>\r\n                                ${this.state.m1.close} USD \r\n                                &nbsp;({ (this.state.m1.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.m2.date}</td>\r\n                            <td>\r\n                                ${this.state.m2.close} USD \r\n                                &nbsp;({ (this.state.m2.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                            </tr>\r\n                        <tr>\r\n                            <td>{this.state.m3.date}</td>\r\n                            <td>\r\n                                ${this.state.m3.close} USD \r\n                                &nbsp;({ (this.state.m3.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{this.state.m4.date}</td>\r\n                            <td>\r\n                                ${this.state.m4.close} USD \r\n                                &nbsp;({ (this.state.m4.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                            </tr>\r\n                        <tr>\r\n                            <td>{this.state.m5.date}</td>\r\n                            <td>\r\n                                ${this.state.m5.close} USD \r\n                                &nbsp;({ (this.state.m5.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                            </tr>\r\n                        <tr>\r\n                            <td>{this.state.m6.date}</td>\r\n                            <td>\r\n                                ${ (this.state.m6.close) } USD \r\n                                &nbsp;({ (this.state.m6.close / this.state.peakPrice.close).toFixed(2) + \"%\" } of ATH)\r\n                            </td>\r\n                            </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br />\r\n                <p>\r\n                    This price recommendation is based on several concepts. <a href=\"https://www.investopedia.com/articles/active-trading/070715/making-money-wyckoff-way.asp\">Wyckoff Way</a> used to identify historical patterns, <a href=\"https://en.wikipedia.org/wiki/Hype_cycle\">Hype Cycles</a>, and an analysis of Bitcoin price patterns\r\n                     during market cycles such as <a href=\"https://medium.com/@coinscrum/first-anniversary-review-of-the-fractal-relationship-between-bitcoins-first-two-bubbles-and-what-c548eb2647b9\"> the fractal relationship between bitcoin's first two bubbles and what they might tell us about a third.</a>\r\n                </p>\r\n\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { price_hist, snapshots } = state\r\n    return { price_hist, snapshots }\r\n}\r\n\r\nexport default connect (mapStateToProps, actionCreators)(Recommend)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from './actions/index';\r\nimport BTCPrice from './components/btc';\r\nimport ETHPrice from './components/eth';\r\nimport RefreshButton from './containers/refresh-button';\r\nimport TransferButton from './containers/transfer-button';\r\nimport Recommend from './containers/recommend';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) { \r\n    super(props);\r\n    this.state = {\r\n        timer: null\r\n      }\r\n    this.tick = this.tick.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000 * this.props.interval)\r\n    this.setState({timer})\r\n    this.refreshPrice()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.clearInterval(this.state.timer)\r\n  }\r\n\r\n  refreshPrice() {\r\n    this.props.fetchBTCPrice()\r\n    this.props.fetchETHPrice()\r\n    console.log(\"refreshed price!\")\r\n  }\r\n\r\n  tick() {\r\n    this.refreshPrice()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <p data-test=\"timer-statement\">Price updates every {this.props.interval} seconds.</p>\r\n        <BTCPrice btc_price={this.props.btc_price} />\r\n        <ETHPrice eth_price={this.props.eth_price} />\r\n\r\n        <br />\r\n        <RefreshButton props={this.refreshPrice} />\r\n\r\n\r\n\r\n\r\n        <br />\r\n        <TransferButton />\r\n\r\n\r\n        <br />\r\n        <Recommend />\r\n\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state) => {\r\n  const { btc_price, eth_price, interval } = state\r\n  return { btc_price, eth_price, interval }\r\n};\r\n\r\nexport default connect (mapStateToProps, actionCreators)(App);\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/index';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk))\r\n\r\n\r\nReactDOM.render( \r\n\t<Provider store={store}> \r\n\t\t<App /> \r\n\t</Provider>, \r\n\tdocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}